{"version":3,"sources":["ScreenCapture.js","App.js","serviceWorker.js","index.js"],"names":["ScreenCapture","state","on","startX","startY","endX","endY","crossHairsTop","crossHairsLeft","isMouseDown","windowWidth","windowHeight","borderWidth","cropPositionTop","cropPositionLeft","cropWidth","cropHeigth","imageURL","componentDidMount","handleWindowResize","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","document","documentElement","clientWidth","body","innerHeight","clientHeight","setState","handStartCapture","handleMouseMove","e","clientX","clientY","isStartTop","isStartBottom","isStartLeft","isStartRight","isStartTopRight","isStartBottomLeft","isStartBottomRight","newBorderWidth","handleMouseDown","prevState","handleMouseUp","handleClickTakeScreenShot","querySelector","html2canvas","then","canvas","croppedCanvas","createElement","croppedCanvasContext","getContext","width","height","drawImage","props","onEndCapture","toDataURL","renderChild","children","onStartCapture","this","onMouseMove","onMouseDown","onMouseUp","className","style","left","top","Component","defaultProps","api","dateBuilder","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","App","useState","query","setQuery","weather","setWeather","screenCapture","handleScreenCapture","AOS","init","main","temp","type","placeholder","autoComplete","onChange","target","value","onKeyPress","event","key","fetch","res","json","result","console","log","localStorage","setItem","name","sys","country","Date","Math","round","marginTop","data-aos","data-aos-anchor-placement","color","display","alignItems","src","icon","alt","clouds","all","pressure","humidity","visibility","wind","speed","description","padding","borderRadius","outline","border","background","onClick","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.07784b40.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport html2canvas from 'html2canvas';\r\n\r\nexport default class ScreenCapture extends Component {\r\n  static defaultProps = {\r\n    onStartCapture: () => null,\r\n    onEndCapture: () => null\r\n  }\r\n\r\n  state = {\r\n    on: false,\r\n    startX: 0,\r\n    startY: 0,\r\n    endX: 0,\r\n    endY: 0,\r\n    crossHairsTop: 0,\r\n    crossHairsLeft: 0,\r\n    isMouseDown: false,\r\n    windowWidth: 0,\r\n    windowHeight: 0,\r\n    borderWidth: 0,\r\n    cropPositionTop: 0,\r\n    cropPositionLeft: 0,\r\n    cropWidth: 0,\r\n    cropHeigth: 0,\r\n    imageURL: ''\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.handleWindowResize()\r\n    window.addEventListener('resize', this.handleWindowResize)\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    window.removeEventListener('resize', this.handleWindowResize)\r\n  }\r\n\r\n  handleWindowResize = () => {\r\n    const windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n    const windowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n\r\n    this.setState({\r\n      windowWidth,\r\n      windowHeight\r\n    })\r\n  }\r\n\r\n  handStartCapture = () => this.setState({ on: true })\r\n\r\n  handleMouseMove = (e) => {\r\n    const { isMouseDown, windowWidth, windowHeight, startX, startY, borderWidth } = this.state\r\n\r\n    let cropPositionTop = startY\r\n    let cropPositionLeft = startX\r\n    const endX = e.clientX\r\n    const endY = e.clientY\r\n    const isStartTop = endY >= startY\r\n    const isStartBottom = endY <= startY\r\n    const isStartLeft = endX >= startX\r\n    const isStartRight = endX <= startX\r\n    const isStartTopLeft = isStartTop && isStartLeft\r\n    const isStartTopRight = isStartTop && isStartRight\r\n    const isStartBottomLeft = isStartBottom && isStartLeft\r\n    const isStartBottomRight = isStartBottom && isStartRight\r\n    let newBorderWidth = borderWidth\r\n    let cropWidth = 0\r\n    let cropHeigth = 0\r\n\r\n    if (isMouseDown) {\r\n      if (isStartTopLeft) {\r\n        newBorderWidth = `${startY}px ${windowWidth - endX}px ${windowHeight - endY}px ${startX}px`\r\n        cropWidth = endX - startX\r\n        cropHeigth = endY - startY\r\n      }\r\n\r\n      if (isStartTopRight) {\r\n        newBorderWidth = `${startY}px ${windowWidth - startX}px ${windowHeight - endY}px ${endX}px`\r\n        cropWidth = startX - endX\r\n        cropHeigth = endY - startY\r\n        cropPositionLeft = endX\r\n      }\r\n\r\n      if (isStartBottomLeft) {\r\n        newBorderWidth = `${endY}px ${windowWidth - endX}px ${windowHeight - startY}px ${startX}px`\r\n        cropWidth = endX - startX\r\n        cropHeigth = startY - endY\r\n        cropPositionTop = endY\r\n      }\r\n\r\n      if (isStartBottomRight) {\r\n        newBorderWidth = `${endY}px ${windowWidth - startX}px ${windowHeight - startY}px ${endX}px`\r\n        cropWidth = startX - endX\r\n        cropHeigth = startY - endY\r\n        cropPositionLeft = endX\r\n        cropPositionTop = endY\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      crossHairsTop: e.clientY,\r\n      crossHairsLeft: e.clientX,\r\n      borderWidth: newBorderWidth,\r\n      cropWidth,\r\n      cropHeigth,\r\n      cropPositionTop: cropPositionTop,\r\n      cropPositionLeft: cropPositionLeft\r\n    })\r\n  }\r\n\r\n  handleMouseDown = (e) => {\r\n    const startX = e.clientX\r\n    const startY = e.clientY\r\n\r\n    this.setState((prevState) => ({\r\n      startX,\r\n      startY,\r\n      cropPositionTop: startY,\r\n      cropPositionLeft: startX,\r\n      isMouseDown: true,\r\n      borderWidth: `${prevState.windowWidth}px ${prevState.windowHeight}px`\r\n    }))\r\n  }\r\n\r\n  handleMouseUp = (e) => {\r\n    this.handleClickTakeScreenShot()\r\n    this.setState({\r\n      on: false,\r\n      isMouseDown: false,\r\n      borderWidth: 0\r\n    })\r\n  }\r\n\r\n  handleClickTakeScreenShot = () => {\r\n    const { cropPositionTop, cropPositionLeft, cropWidth, cropHeigth } = this.state\r\n    const body = document.querySelector('body')\r\n\r\n    html2canvas(body).then(canvas => {\r\n      let croppedCanvas = document.createElement('canvas')\r\n      let croppedCanvasContext = croppedCanvas.getContext('2d')\r\n\r\n      croppedCanvas.width = cropWidth;\r\n      croppedCanvas.height = cropHeigth;\r\n\r\n      croppedCanvasContext.drawImage(canvas, cropPositionLeft, cropPositionTop, cropWidth, cropHeigth, 0, 0, cropWidth, cropHeigth);\r\n\r\n      this.props.onEndCapture(croppedCanvas.toDataURL())\r\n    });\r\n  }\r\n\r\n  renderChild = () => {\r\n    const { children } = this.props\r\n\r\n    const props = {\r\n      onStartCapture: this.handStartCapture\r\n    }\r\n\r\n    if (typeof children === 'function') return children(props)\r\n    return children\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      on,\r\n      crossHairsTop,\r\n      crossHairsLeft,\r\n      borderWidth,\r\n      isMouseDown,\r\n      imageURL\r\n    } = this.state\r\n\r\n    if (!on) return this.renderChild()\r\n\r\n    return (\r\n      <div\r\n        onMouseMove={this.handleMouseMove}\r\n        onMouseDown={this.handleMouseDown}\r\n        onMouseUp={this.handleMouseUp}\r\n      >\r\n        {this.renderChild()}\r\n        <div\r\n          className={`overlay ${isMouseDown && 'highlighting'}`}\r\n          style={{ borderWidth }}\r\n        />\r\n        <div\r\n          className=\"crosshairs\"\r\n          style={{ left: crossHairsLeft + 'px', top: crossHairsTop + 'px' }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { useState } from 'react';\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\nimport ScreenCapture from './ScreenCapture'\n\nimport './App.css';\n\nconst api = {\n  key: \"b251a0105d1b7dd8c153acf7d43e6fc0\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\nconst dateBuilder = (d) => {\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n\n  return `${day} ${date} ${month} ${year}`\n}\n\n// localStorage.getItem('query') ? localStorage.getItem('query') : \nfunction App() {\n  const [query, setQuery] = useState('')\n  const [weather, setWeather] = useState({})\n  const [screenCapture, handleScreenCapture] = useState('')\n  AOS.init()\n\n\n\n  const search = event => {\n    if (event.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          console.log(result)\n\n          setWeather(result)\n          localStorage.setItem('query', query)\n          setQuery('')\n        })\n    }\n  }\n  function weatherCss() {\n    if (typeof weather.main != 'undefined') {\n      if (weather.main.temp > 16) { return \"app warm\" }\n      return \"app\"\n    }\n    return \"app\"\n  }\n  return (\n    <div className={weatherCss()}>\n\n\n      <main>\n        <div className=\"search-box\">\n          <input type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"search city...\"\n            autoComplete=\"on\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search} />\n        </div>\n\n        {(typeof weather.main != \"undefined\") ? (\n          <>\n\n            <ScreenCapture onEndCapture={handleScreenCapture}>\n              {({ onStartCapture }) => (\n                <>\n\n                  <div className=\"location-box\">\n                    <div className=\"location\">\n                      {weather.name}, {weather.sys.country}\n                    </div>\n                    <div className=\"date\">\n                      {dateBuilder(new Date())}\n                    </div>\n                  </div>\n\n                  <div className=\"weather-box\">\n                    <div className=\"temp\">\n                      {Math.round(weather.main.temp)}°C\n              </div>\n                    <div className=\"weather\">\n                      {weather.weather[0].main}\n                    </div>\n                  </div>\n\n                  <div style={{ marginTop: \"500px\" }}>\n            <div\n              data-aos=\"fade-up\"\n              data-aos-anchor-placement=\"top-bottom\"\n              style={{ color: \"whitesmoke\" }}>\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <img src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].icon} />\n                Cloudiness: {weather.clouds.all} %\n  \n              </div>\n              <div style={{ display: \"flex\" }}><p> Pressure: </p> <span> {weather.main.pressure} hpa</span></div>\n              <div style={{ display: \"flex\" }}> <p> Humidity: </p> <span> {weather.main.humidity}</span></div>\n              <div style={{ display: \"flex\" }}> <p> Visibility: </p> <span> {weather.visibility}</span></div>\n              <div style={{ display: \"flex\" }}> <p> Wind: </p> <span> {weather.wind.speed}</span></div>\n              <div style={{ display: \"flex\" }}> <p>Description: </p> {weather.weather[0].description} </div>\n\n            </div></div>\n\n                  <button style={{\n                    padding: \" 4px\",\n                    borderRadius: '6px',\n                    outline: 'none',\n                    border: 'none',\n                    background: '#fff5ee99'\n                  }} onClick={onStartCapture}>Capture</button>\n                  <br />\n                  <br />\n                  <img src={screenCapture} alt=\"\" />\n                </>)}\n            </ScreenCapture>\n          </>)\n\n          : (<>\n            <div className=\"location-box\">\n              <div className=\"location\">\n\n              </div>\n              <div className=\"date\">\n                {dateBuilder(new Date())}\n              </div>\n            </div>\n\n            <div className=\"weather-box\">\n              <div className=\"temp\">\n                °C\n            </div>\n              <div className=\"weather\">\n\n\n              </div>\n            </div></>)}\n\n\n        {(typeof weather.main != \"undefined\")\n          ? ('')\n          : (null)}\n\n\n\n      </main>\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}